
" plugins/20-settings/files -------------------

" make Y consistent with C and D
" must be in 'after' to prevent yankring overriding it
nnoremap Y y$

" plugins/50-fuzzy-tools/plugins/00-unite/files -------------------

" call unite#filters#matcher_default#use(['matcher_fuzzy'])

" plugins/99-final/plugins/10-local-configs/files -------------------

if filereadable(expand("~/.vimrc.after"))
    source ~/.vimrc.after
endif

augroup spellcheck
    " Ignore CamelCase words when spell checking
    fun! IgnoreCamelCaseSpell()
        syn match CamelCase /\<[A-Z][a-z]\+[A-Z].\{-}\>/ contains=@NoSpell transparent
        syn match snakeCase /\<[a-z]\+[A-Z].\{-}\>/ contains=@NoSpell transparent
        syn cluster Spell add=CamelCase
        syn cluster Spell add=snakeCase
    endfun
    autocmd BufRead,BufNewFile * :call IgnoreCamelCaseSpell()
augroup END

" jsonc comments support
autocmd FileType json syntax match Comment +\/\/.\+$+

augroup mygroup
  autocmd!
  " Setup formatexpr specified filetype(s).
  autocmd FileType typescript,jsx,js,json setl formatexpr=CocAction('formatSelected')
  " Update signature help on jump placeholder
  autocmd User CocJumpPlaceholder call CocActionAsync('showSignatureHelp')
augroup end

" for html/rb files, 2 spaces
autocmd Filetype html setlocal ts=2 sw=2 expandtab
autocmd Filetype ruby setlocal ts=2 sw=2 expandtab

au FileType python setl sw=2 sts=2 et
au FileType scss setl sw=2 sts=2 et
au Filetype javascript setl ts=2 sw=2 sts=0 expandtab
au FileType javascript.jsx setl ts=2 sw=2 sts=0 expandtab commentstring={/*\ %s\ */}
"
" Show leading white space that includes spaces, and trailing whites pace.
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()


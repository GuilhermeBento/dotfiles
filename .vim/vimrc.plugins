
" plugins/10-init/files -------------------

call dein#add('Shougo/dein.vim')
call dein#add('Shougo/vimproc.vim', {'build': 'make'})
call dein#add('Shougo/unite.vim')

" plugins/20-settings/files -------------------

let mapleader = ","
let maplocalleader = "\\"

" plugins/jiangmiao/auto-pairs
call dein#add('jiangmiao/auto-pairs')

" plugins/terryma/vim-multiple-cursors
call dein#add('terryma/vim-multiple-cursors')

" plugins/30-general/plugins/airline/files -------------------

call dein#add('vim-airline/vim-airline')
call dein#add('vim-airline/vim-airline-themes')

let g:airline_powerline_fonts=1
let g:airline_theme='light' " dark simple badwolf solarized solarized2
set noshowmode

" plugins/30-general/plugins/greplace/files -------------------

call dein#add('vim-scripts/greplace.vim')

" plugins/30-general/plugins/gundo/files -------------------

call dein#add('sjl/gundo.vim')

" plugins/vim-tsx-jsx

let g:gundo_close_on_revert = 1

nmap <leader>u :GundoToggle<CR>

" plugins/30-general/plugins/nerdtools/plugins/nerdtree/files -------------------

call dein#add('scrooloose/nerdtree')

" Tells the NERD tree to respect 'wildignore'.
let NERDTreeRespectWildIgnore=1

" plugins/30-general/plugins/nerdtools/plugins/nerdtree/plugins/10-nerdtree-git/files -------------------

call dein#add('Xuyuanp/nerdtree-git-plugin')
call dein#add('tpope/vim-fugitive')

" signify
call dein#add('mhinz/vim-signify')

" plugins/jparise/vim-graphql
call dein#add("jparise/vim-graphql")

" plugins/30-general/plugins/nerdtools/plugins/nerdtree/plugins/20-nerdtree-tabs/files -------------------

call dein#add('jistr/vim-nerdtree-tabs')

" nerdtree with tqbs
" Ctrl-P to Display the file browser tree
nmap <C-P> :NERDTreeTabsToggle<CR>
" ,p to show current file in the tree
nmap <leader>p :NERDTreeFind<CR>

" ,/ to invert comment on the current line/selection
nmap <leader>/ :call NERDComment(0, "invert")<cr>
vmap <leader>/ :call NERDComment(0, "invert")<cr>

" plugins/30-general/plugins/repeat/files -------------------

" replacement for the repeat mapping (.) to support plugins
call dein#add('tpope/vim-repeat')

" plugins/30-general/plugins/session/files -------------------

call dein#add('xolox/vim-misc')
"
" plugins/xolox/vim-notes

call dein#add('xolox/vim-notes')

" Set notes store directories
let g:notes_directories = ['~/Google Drive/vimNotes', '~/Documents/Notes']

" plugins/30-general/plugins/utl/files -------------------

call dein#add('vim-scripts/utl.vim')

nmap <leader>o :Utl <space>

" plugins/30-general/plugins/xterm-color-table/files -------------------
call dein#add("fatih/molokai")

" plugins/coc
call dein#add('neoclide/coc.nvim', {'merge':0, 'rev': 'release'})

" coc extensions
let g:coc_global_extensions = ['coc-eslint', 'coc-tsserver', 'coc-emmet', 'coc-css', 'coc-html', 'coc-json', 'coc-yank', 'coc-prettier']

if executable('ag')
  let g:unite_source_rec_async_command = ['ag', '--follow', '--nocolor', '--nogroup', '-g', '']
endif

nmap <leader>O :Unite -start-insert -no-split -buffer-name=Outline outline<cr>

" plugins/50-fuzzy-tools/plugins/01-ctrlp/files -------------------

call dein#add('ctrlpvim/ctrlp.vim')

let g:ctrlp_clear_cache_on_exit = 1

let g:ctrlp_max_height = 20

" jump to buffer in the same tab if already open
let g:ctrlp_switch_buffer = 0

" if in git repo - use git file listing command, should be faster
" using this option overrides standard CtrlP ignore list based on vim wildignore
" so use 'grep -v ...' to exclude common image and font files from the search
let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files --exclude-standard -cod | grep -viE "\.(png|gif|jpg|gz|woff|eot|tiff|ttf|otf)$"']

" open multiple files with <c-z> to mark and <c-o> to open. v - opening in
" vertical splits; j - jump to first open buffer; r - open first in current buffer
let g:ctrlp_open_multiple_files = 'hjr'

let g:ctrlp_extensions = ['tag', 'buffertag', 'quickfix', 'mixed', 'line']

let g:ctrlp_working_path_mode = 'ra'

" prevent CtrlP from adding the default map
let g:ctrlp_map = ''

" plugins/50-fuzzy-tools/plugins/ag-------------------
call dein#add('rking/ag.vim')

" plugins/50-fuzzy-tools/plugins/02-fzf/files -------------------
call dein#add('junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' })
call dein#add('junegunn/fzf.vim')

if executable("ag") && ('' == $FZF_DEFAULT_COMMAND)
  let $FZF_DEFAULT_COMMAND = 'ag -l --hidden --ignore .git -g ""'
endif
" [Buffers] Jump to the existing window if possible
let g:fzf_buffers_jump = 1

" [[B]Commits] Customize the options used by 'git log':
let g:fzf_commits_log_options = '--graph --color=always --format="%C(auto)%h%d %s %C(black)%C(bold)%cr"'

" plugins/50-fuzzy-tools/plugins/02-fzf/install.sh -------------------

set rtp+=~/.fzf

" plugins/50-fuzzy-tools/plugins/10-fuzzy-files/fzf -------------------

nmap <leader>, :Files<cr>

" plugins/50-fuzzy-tools/plugins/40-ag/files -------------------

nmap <leader>k :Ag<space>

" plugins/50-fuzzy-tools/plugins/40-fuzzy-lines/fzf -------------------

nmap <leader>l :Lines<cr>

call dein#add('mattn/emmet-vim')

call dein#add('sheerun/vim-polyglot')

let g:javascript_plugin_jsdoc = 1

" Web
call dein#add('tpope/vim-markdown')

" plugins/70-languages/plugins/raml/files -------------------

call dein#add('in3d/vim-raml')

let g:blockle_mapping = '<Leader>B'

" plugins/70-languages/plugins/tmux/files -------------------

call dein#add('tsaleh/vim-tmux')

" plugin/vim-surround ---------

call dein#add('tpope/vim-surround')

call dein#add('tpope/vim-commentary')

" plugin/vim-css-color
call dein#add('ap/vim-css-color')

" Plugin tmux navigator

call dein#add('christoomey/vim-tmux-navigator')

" Plugin snippets
call dein#add('SirVer/ultisnips')
call dein#add('mlaursen/vim-react-snippets')

" plugins/99-final/plugins/10-local-configs/files -------------------

if filereadable(expand("~/.vimrc.plugins"))
    source ~/.vimrc.plugins
endif
